# 该脚本获取城市的分区
import json
import re
import time
import requests
from lxml import etree
import os

""" 房天下 """

headers = {
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
    "Accept-Encoding": "gzip, deflate, br",
    "Accept-Language": "zh-CN,zh;q=0.9",
    "upgrade-insecure-requests": "1",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36",
}
def getCity_Code():
    item={}
    response = requests.get('https://www.fang.com/SoufunFamily.htm', headers=headers, timeout=(5, 5))
    response.encoding = 'gbk'
    html = etree.HTML(response.text)
    lists=html.xpath('//div[@class="onCont"]/table//a')
    for i in lists:
        city=i.xpath('./text()')[0]
        url=i.xpath('./@href')[0]
        code=url.split('.')[0][7:]
        # print(city,code,url)
        if city in ['波士顿','保加利亚','昌吉','德国','海外','西雅图','广德','旧金山','洛杉矶','日本','塞浦路斯','西雅图','西班牙','希腊','悉尼','芝加哥','马来西亚','澳大利亚','美国','纽约','葡萄牙','蒙城','安陆','璧山','綦江','潜江','石河子','万州']:
            continue
        item[city]=code
    return item
citylist=[
 '滁州',
 '马鞍山',
 '安庆',
 '蚌埠',
 '巢湖',
 '池州',
 '阜阳',
 '淮北',
 '淮南',
 '黄山',
 '六安',
 '宿州',
 '铜陵',
 '芜湖',
 '宣城',
 '亳州',
 '合肥',
 '澳门',
 '北京',
 '福州',
 '厦门',
 '龙岩',
 '南平',
 '宁德',
 '莆田',
 '泉州',
 '三明',
 '漳州',
 '兰州',
 '白银',
 '定西',
 '甘南',
 '嘉峪关',
 '金昌',
 '酒泉',
 '临夏',
 '陇南',
 '平凉',
 '庆阳',
 '天水',
 '武威',
 '张掖',
 '深圳',
 '东莞',
 '惠州',
 '广州',
 '佛山',
 '潮州',
 '河源',
 '江门',
 '揭阳',
 '茂名',
 '梅州',
 '清远',
 '汕头',
 '汕尾',
 '韶关',
 '阳江',
 '云浮',
 '湛江',
 '肇庆',
 '中山',
 '珠海',
 '北海',
 '南宁',
 '桂林',
 '百色',
 '崇左',
 '防城港',
 '贵港',
 '河池',
 '贺州',
 '来宾',
 '柳州',
 '钦州',
 '梧州',
 '玉林',
 '贵阳',
 '安顺',
 '毕节',
 '六盘水',
 '黔东南',
 '黔南',
 '黔西南',
 '铜仁',
 '遵义',
 '海口',
 '三亚',
 '白沙',
 '保亭',
 '昌江',
 '澄迈',
 '定安',
 '东方',
 '乐东',
 '临高',
 '陵水',
 '琼海',
 '琼中',
 '屯昌',
 '万宁',
 '文昌',
 '五指山',
 '儋州',
 '石家庄',
 '保定',
 '沧州',
 '承德',
 '邯郸',
 '衡水',
 '廊坊',
 '秦皇岛',
 '唐山',
 '邢台',
 '张家口',
 '郑州',
 '洛阳',
 '开封',
 '安阳',
 '鹤壁',
 '济源',
 '焦作',
 '南阳',
 '平顶山',
 '三门峡',
 '商丘',
 '新乡',
 '信阳',
 '许昌',
 '周口',
 '驻马店',
 '漯河',
 '濮阳',
 '哈尔滨',
 '大庆',
 '大兴安岭',
 '鹤岗',
 '黑河',
 '鸡西',
 '佳木斯',
 '牡丹江',
 '七台河',
 '齐齐哈尔',
 '双鸭山',
 '绥化',
 '伊春',
 '武汉',
 '鄂州',
 '孝感',
 '仙桃',
 '黄冈',
 '黄石',
 '荆门',
 '荆州',
 '潜江',
 '神农架',
 '十堰',
 '随州',
 '天门',
 '咸宁',
 '襄阳',
 '宜昌',
 '恩施',
 '长沙',
 '张家界',
 '常德',
 '郴州',
 '衡阳',
 '怀化',
 '娄底',
 '邵阳',
 '湘潭',
 '湘西',
 '益阳',
 '永州',
 '岳阳',
 '株洲',
 '长春',
 '吉林',
 '白城',
 '白山',
 '辽源',
 '四平',
 '松原',
 '通化',
 '延边',
 '南京',
 '南通',
 '扬州',
 '镇江',
 '苏州',
 '无锡',
 '常州',
 '淮安',
 '连云港',
 '宿迁',
 '泰州',
 '徐州',
 '盐城',
 '南昌',
 '抚州',
 '赣州',
 '吉安',
 '景德镇',
 '九江',
 '萍乡',
 '上饶',
 '新余',
 '宜春',
 '鹰潭',
 '沈阳',
 '大连',
 '鞍山',
 '本溪',
 '朝阳',
 '丹东',
 '抚顺',
 '阜新',
 '葫芦岛',
 '锦州',
 '辽阳',
 '盘锦',
 '铁岭',
 '营口',
 '呼和浩特',
 '阿拉善',
 '巴彦淖尔',
 '包头',
 '赤峰',
 '鄂尔多斯',
 '呼伦贝尔',
 '通辽',
 '乌海',
 '乌兰察布',
 '锡林郭勒',
 '兴安',
 '银川',
 '固原',
 '石嘴山',
 '吴忠',
 '中卫',
 '西宁',
 '果洛',
 '海北',
 '海东',
 '海南',
 '海西',
 '黄南',
 '玉树',
 '济南',
 '德州',
 '济宁',
 '青岛',
 '滨州',
 '东营',
 '菏泽',
 '莱芜',
 '聊城',
 '临沂',
 '日照',
 '泰安',
 '威海',
 '潍坊',
 '烟台',
 '枣庄',
 '淄博',
 '太原',
 '长治',
 '大同',
 '晋城',
 '晋中',
 '临汾',
 '吕梁',
 '朔州',
 '忻州',
 '阳泉',
 '运城',
 '西安',
 '咸阳',
 '安康',
 '宝鸡',
 '汉中',
 '商洛',
 '铜川',
 '渭南',
 '延安',
 '榆林',
 '上海',
 '成都',
 '绵阳',
 '阿坝',
 '巴中',
 '达州',
 '德阳',
 '甘孜',
 '广安',
 '广元',
 '乐山',
 '凉山',
 '眉山',
 '南充',
 '内江',
 '攀枝花',
 '遂宁',
 '雅安',
 '宜宾',
 '资阳',
 '自贡',
 '泸州',
 '台湾',
 '天津',
 '拉萨',
 '阿里',
 '昌都',
 '林芝',
 '那曲',
 '日喀则',
 '山南',
 '香港',
 '乌鲁木齐',
 '阿克苏',
 '阿拉尔',
 '巴音郭楞',
 '博尔塔拉',
 '昌吉',
 '哈密',
 '和田',
 '喀什',
 '克拉玛依',
 '克孜勒苏',
 '石河子',
 '图木舒克',
 '吐鲁番',
 '五家渠',
 '伊犁',
 '昆明',
 '怒江',
 '普洱',
 '丽江',
 '保山',
 '楚雄',
 '大理',
 '德宏',
 '迪庆',
 '红河',
 '临沧',
 '曲靖',
 '文山',
 '西双版纳',
 '玉溪',
 '昭通',
 '杭州',
 '温州',
 '湖州',
 '嘉兴',
 '台州',
 '金华',
 '丽水',
 '宁波',
 '绍兴',
 '舟山',
 '衢州',
 '重庆']
# city_map=getCity_Code()
# with open(os.path.join(os.path.dirname(__file__), 'city_map.json'), 'r', encoding='utf-8') as f:
#     city_map = json.load(f)



# 下载请求页面
def get_html(url, headers):
    while True:
        try:
            proxies = {"https": get_proxy()}
            response = requests.get(url, headers=headers,proxies=proxies,timeout=(10, 10))
            encod = response.apparent_encoding
            if encod == 'GB2312':
                encod = 'gbk'
            response.encoding = encod
            html = etree.HTML(response.text)
            if '跳转' in "".join(html.xpath("//title/text()")):
                t4 = "".join(re.findall("var t4=\'(.*)\';", response.text)[0])
                t3 = "".join(re.findall('var t3=\'(.*)\';', response.text)[-2])
                url = t4 + '?' + t3
                print("二次验证: t4: ", t4, "\tt3: ", t3)
                continue
            return html
        except Exception as e:
            print("请求出错: ",proxies, e)
            continue


# 根据城市名获得行政区
def get_proxy():
    try:
            return requests.get('http://47.106.223.4:50002/get/').json().get('proxy')
    except:
        num = 3
        while num:
            try:
                return requests.get('http://47.106.223.4:50002/get/').json().get('proxy')
            except:
                print('暂无ip，等待20秒')
                time.sleep(20)
                num-=1
        print('暂无ip')
def get_regions(city_name, GetType):
    """
    根据城市名获得行政区
    :type  二手房抓取
    :param city_name:
    :return: {'guangming': '光明'}
    """
    headers = {
        "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3",
        "Accept-Encoding": "gzip, deflate, br",
        "Accept-Language": "zh-CN,zh;q=0.9",
        "Cookie": "global_cookie=f1v4y6cur4h7034ieaxs84qnk17jxobmy8b; Integrateactivity=notincludemc; newhouse_user_guid=50E5E180-78E4-4D10-DD8D-77E13BC96848; lastscanpage=0; __utmc=147393320; logGuid=85ba8359-bbe3-40bf-a1b9-5fba4ba5e9c3; new_search_uid=409e38256dd50cc398a6ef44a4cf8ea6; __utmz=147393320.1564039746.31.23.utmcsr=gz.fang.com|utmccn=(referral)|utmcmd=referral|utmcct=/; city=www; __utma=147393320.1256259835.1562223675.1564039746.1564054938.32; __utmt_t0=1; __utmt_t1=1; __utmt_t2=1; budgetLayer=1%7Cbj%7C2019-07-25%2019%3A47%3A37; resourceDetail=1; g_sourcepage=ehlist; unique_cookie=U_y46qm1gjou8nny4td442ktabo11jydqi82f*242; __utmb=147393320.30.10.1564054938",
        "Referer": "https://esf.fang.com/newsecond/esfcities.aspx",
        "upgrade-insecure-requests": "1",
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.100 Safari/537.36",
    }

    # 二手房
    if GetType == '二手房':
        url = 'https://{}.esf.fang.com/'.format(city_map[city_name])
        if city_name == '北京':
            url = 'https://esf.fang.com/'
        print('\n将在 %s 爬取行政区' % url)
        html = get_html(url, headers=headers)

        regions_xpath = "//span[contains(text(), '区域')]//following-sibling::ul//a"
        regions = dict(zip(html.xpath(regions_xpath + '/@href'), html.xpath(regions_xpath + '/text()')))
        regions = {key.rsplit('/', 2)[-2]: value for key, value in regions.items() if
                   '周边' not in value and '全部' not in value}

        return regions
    elif GetType == '租房':
        url = 'https://{}.zu.fang.com/'.format(city_map[city_name])
        if city_name == '北京':
            url = 'https://zu.fang.com/'
        print('\n将在 %s 爬取行政区' % url)
        html = get_html(url, headers=headers)

        regions_xpath = '//dl[@id="rentid_D04_01"]//a'
        regions = dict(zip(html.xpath(regions_xpath + '/@href'), html.xpath(regions_xpath + '/text()')))
        # regions = {key.rsplit('/', 2)[-2]: value for key, value in regions.items() if
        #            '周边' not in value and '全部' not in value}
        return regions

    else:  # 小区
        url = 'https://{}.esf.fang.com/housing/'.format(city_map[city_name])
        if city_name == '北京':
            url = 'https://esf.fang.com/housing/'
        if city_name == '绍兴':
            url = 'https://shaoxing.esf.fang.com/housing/'
        print('\n将在 %s 爬取行政区' % url)

        html = get_html(url=url, headers=headers)

        regions_xpath = "//*[@id='houselist_B03_02']/div[@class='qxName']/a"
        regions = dict(zip(html.xpath(regions_xpath + '/@href'), html.xpath(regions_xpath + '/text()')))
        regions = {key.rsplit('/', 2)[-2]: value for key, value in regions.items() if
                   '不限' not in value and '全部' not in value and '周边' not in value}

        return regions


def make_url(city_name, url_fmt, GetType, city_code='suoxie'):
    # 获取城市中文名称
    # filter()
    # 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。
    # 该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后将值为True的返回到新列表中
    city_name = list(filter(lambda x: city_name in x, city_map))[0]

    # 获取城市名称拼音
    code = city_map.get(city_name)

    print(code, code)
    if city_name == '绍兴' and GetType == '小区':
        code = 'shaoxing'
    if code:
        # 获取城市的行政区划分列表
        regions = {url_fmt.format(code, key): value for key, value in get_regions(city_name, GetType).items()}

        print(city_name, code, '\n提取到的分区: ', regions)
        return regions
    elif city_name == '北京':
        regions = {'https://{}esf.fang.com/{}/'.format(code, key): value for key, value in
                   get_regions(city_name, GetType).items()}
        if GetType != '二手房':
            regions = {'https://{}esf.fang.com/housing/{}/'.format(code, key): value for key, value in
                       get_regions(city_name, GetType).items()}

        print(city_name, code, '\n提取到的分区: ', regions)

        return regions
    else:
        return {}
def zfmake_url(city_name, url_fmt, GetType, city_code='suoxie'):
    # 获取城市中文名称
    # filter()
    # 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。
    # 该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后将值为True的返回到新列表中
    city_name = list(filter(lambda x: city_name in x, city_map))[0]

    # 获取城市名称拼音
    code = city_map.get(city_name)

    print(code, code)
    if city_name == '绍兴' and GetType == '租房':
        code = 'shaoxing'
    if code:
        # 获取城市的行政区划分列表
        regions = {url_fmt.format(code, key): value for key, value in get_regions(city_name, GetType).items()}

        print(city_name, code, '\n提取到的分区: ', regions)
        return regions
    elif city_name == '北京':
        regions = {'https://{}zu.fang.com/{}/'.format(code, key): value for key, value in
                   get_regions(city_name, GetType).items()}
        if GetType != '租房':
            regions = {'https://{}zu.fang.com/housing/{}/'.format(code, key): value for key, value in
                       get_regions(city_name, GetType).items()}

        print(city_name, code, '\n提取到的分区: ', regions)

        return regions
    else:
        return {}
city_map={
  "海南省": "hn",
  "阿坝州": "abazhou",
  "阿克苏": "akesu",
  "阿拉尔": "alaer",
  "阿拉善盟": "alsm",
  "阿里": "ali",
  "安达": "anda",
  "安吉": "aj",
  "安康": "ankang",
  "安宁": "anning",
  "安庆": "anqing",
  "安丘": "anqiu",
  "鞍山": "anshan",
  "安顺": "anshun",
  "安溪": "fjax",
  "安阳": "anyang",
  "澳门": "macau",
  "白城": "baicheng",
  "百色": "baise",
  "白山": "baishan",
  "白银": "baiyin",
  "保定": "bd",
  "宝鸡": "baoji",
  "保山": "baoshan",
  "包头": "bt",
  "宝应": "baoying",
  "巴彦": "bayan",
  "巴彦淖尔": "byne",
  "巴中": "bazhong",
  "巴州": "bazhou",
  "霸州": "hbbz",
  "博尔塔拉": "betl",
  "北海": "bh",
  "北京": "",
  "蚌埠": "bengbu",
  "本溪": "benxi",
  "毕节": "bijie",
  "宾县": "binxian",
  "宾阳": "gxby",
  "滨州": "binzhou",
  "璧山": "bishan",
  "博罗": "boluo",
  "亳州": "bozhou",
  "沧州": "cangzhou",
  "长春": "changchun",
  "长岛": "ytcd",
  "常德": "changde",
  "昌都": "changdu",
  "长丰": "ahcf",
  "长葛": "changge",
  "昌吉": "changji",
  "长乐": "changle",
  "昌乐": "sdcl",
  "昌黎": "changli",
  "常宁": "cn",
  "长清": "jncq",
  "长沙": "cs",
  "长寿": "changshou",
  "常熟": "changshu",
  "长兴": "changxing",
  "昌邑": "changyi",
  "长治": "changzhi",
  "常州": "cz",
  "巢湖": "chaohu",
  "朝阳": "chaoyang",
  "潮州": "chaozhou",
  "承德": "chengde",
  "成都": "cd",
  "郴州": "chenzhou",
  "赤峰": "chifeng",
  "池州": "chizhou",
  "重庆": "cq",
  "崇州": "chongzhou",
  "崇左": "chongzuo",
  "淳安": "chunan",
  "楚雄": "chuxiong",
  "滁州": "chuzhou",
  "慈溪": "cixi",
  "大理": "dali",
  "大连": "dl",
  "丹东": "dandong",
  "当涂": "dangtu",
  "当阳": "dangyang",
  "儋州": "danzhou",
  "大庆": "daqing",
  "大同": "datong",
  "大兴安岭": "dxal",
  "大邑": "dayi",
  "达州": "dazhou",
  "大足": "dazu",
  "德宏": "dehong",
  "德化": "dh",
  "德惠": "dehui",
  "登封": "dengfeng",
  "邓州": "dengzhou",
  "德清": "deqing",
  "德阳": "deyang",
  "德州": "dz",
  "垫江": "dianjiang",
  "定西": "dingxi",
  "定兴": "dingxing",
  "定州": "dingzhou",
  "迪庆": "diqing",
  "东方": "dongfang",
  "东港": "donggang",
  "东莞": "dg",
  "东海": "donghai",
  "东台": "dongtai",
  "东营": "dy",
  "都江堰": "dujiangyan",
  "鄂尔多斯": "erds",
  "峨眉山": "emeishan",
  "恩平": "enping",
  "恩施": "enshi",
  "鄂州": "ezhou",
  "法库": "faku",
  "繁昌": "fanchang",
  "防城港": "fangchenggang",
  "肥城": "feicheng",
  "肥东": "feidong",
  "肥西": "feixi",
  "凤城": "fengcheng",
  "丰城": "jxfc",
  "丰都": "fengdu",
  "奉化": "fenghua",
  "奉节": "fengjie",
  "丰县": "jsfx",
  "佛山": "fs",
  "福安": "fuan",
  "涪陵": "fuling",
  "阜宁": "funing",
  "福清": "fq",
  "抚顺": "fushun",
  "阜新": "fuxin",
  "阜阳": "fuyang",
  "富阳": "zjfy",
  "抚州": "jxfuzhou",
  "福州": "fz",
  "甘南": "gannan",
  "赣州": "ganzhou",
  "甘孜": "ganzi",
  "高碑店": "gaobeidian",
  "高淳": "njgc",
  "高陵": "gaoling",
  "高密": "gaomi",
  "高邮": "gaoyou",
  "巩义": "gongyi",
  "公主岭": "gongzhuling",
  "广安": "guangan",
  "广饶": "guangrao",
  "广元": "guangyuan",
  "广州": "gz",
  "贵港": "guigang",
  "桂林": "guilin",
  "贵阳": "gy",
  "果洛": "guoluo",
  "固原": "guyuan",
  "固镇": "guzhen",
  "哈尔滨": "hrb",
  "海安": "haian",
  "海北": "haibei",
  "海城": "haicheng",
  "海东": "haidong",
  "海拉尔": "hailaer",
  "海林": "hailin",
  "海门": "haimen",
  "海南": "hn",
  "海宁": "haining",
  "海西": "haixi",
  "海盐": "haiyan",
  "海阳": "haiyang",
  "哈密": "hami",
  "汉川": "hanchuan",
  "邯郸": "hd",
  "杭州": "hz",
  "汉南": "whhn",
  "汉中": "hanzhong",
  "鹤壁": "hebi",
  "河池": "hechi",
  "合川": "hechuan",
  "合肥": "hf",
  "鹤岗": "hegang",
  "黑河": "heihe",
  "衡水": "hs",
  "横县": "hengxian",
  "衡阳": "hengyang",
  "鹤山": "heshan",
  "和田": "hetian",
  "河源": "heyuan",
  "菏泽": "heze",
  "贺州": "hezhou",
  "红河": "honghe",
  "桦甸": "huadian",
  "淮安": "huaian",
  "淮北": "huaibei",
  "怀化": "huaihua",
  "淮南": "huainan",
  "怀仁": "huairen",
  "怀远": "huaiyuan",
  "黄冈": "huanggang",
  "黄南": "huangnan",
  "黄山": "huangshan",
  "黄石": "huangshi",
  "呼和浩特": "nm",
  "惠安": "huian",
  "惠东": "huidong",
  "惠州": "huizhou",
  "葫芦岛": "huludao",
  "呼伦贝尔": "hlbe",
  "霍邱": "huoqiu",
  "户县": "huxian",
  "湖州": "huzhou",
  "佳木斯": "jiamusi",
  "吉安": "jian",
  "建德": "jiande",
  "江都": "jiangdu",
  "江津": "jiangjin",
  "江门": "jm",
  "姜堰": "jiangyan",
  "江阴": "jy",
  "简阳": "jianyang",
  "胶南": "jiaonan",
  "胶州": "jiaozhou",
  "焦作": "jiaozuo",
  "嘉兴": "jx",
  "嘉峪关": "jiayuguan",
  "揭阳": "jieyang",
  "吉林": "jl",
  "即墨": "jimo",
  "济南": "jn",
  "金昌": "jinchang",
  "晋城": "jc",
  "靖安": "jxja",
  "景德镇": "jingdezhen",
  "靖江": "jingjiang",
  "荆门": "jingmen",
  "京山": "hbjs",
  "荆州": "jingzhou",
  "金湖": "jinhu",
  "金华": "jh",
  "济宁": "jining",
  "金坛": "jintan",
  "金堂": "scjt",
  "进贤": "jinxian",
  "晋中": "jinzhong",
  "锦州": "jinzhou",
  "晋州": "hbjz",
  "九江": "jiujiang",
  "酒泉": "jiuquan",
  "鸡西": "jixi",
  "济阳": "sdjy",
  "济源": "jiyuan",
  "蓟州": "jizhou",
  "冀州": "jz",
  "句容": "jr",
  "开封": "kaifeng",
  "开平": "kaiping",
  "开县": "kaixian",
  "开阳": "kaiyang",
  "康平": "kangping",
  "喀什": "kashi",
  "克拉玛依": "kelamayi",
  "克孜勒苏": "kzls",
  "库尔勒": "kuerle",
  "奎屯": "kuitun",
  "昆明": "km",
  "昆山": "ks",
  "来宾": "laibin",
  "莱芜": "laiwu",
  "莱西": "laixi",
  "莱阳": "laiyang",
  "莱州": "laizhou",
  "廊坊": "lf",
  "兰考": "lankao",
  "蓝田": "lantian",
  "兰州": "lz",
  "老河口": "lhk",
  "拉萨": "lasa",
  "耒阳": "leiyang",
  "乐山": "leshan",
  "乐亭": "hblt",
  "梁平": "liangping",
  "凉山": "liangshan",
  "连江": "lianjiang",
  "连云港": "lyg",
  "聊城": "lc",
  "辽阳": "liaoyang",
  "辽源": "liaoyuan",
  "辽中": "liaozhong",
  "丽江": "lijiang",
  "醴陵": "liling",
  "临安": "linan",
  "临沧": "lincang",
  "临汾": "linfen",
  "临海": "linhai",
  "临清": "linqing",
  "临朐": "linqu",
  "临夏": "linxia",
  "临沂": "linyi",
  "临猗": "sxly",
  "林芝": "linzhi",
  "丽水": "ls",
  "六盘水": "lps",
  "浏阳": "liuyang",
  "柳州": "liuzhou",
  "溧阳": "liyang",
  "龙海": "longhai",
  "龙口": "longkou",
  "龙门": "gdlm",
  "陇南": "longnan",
  "龙岩": "longyan",
  "娄底": "loudi",
  "六安": "luan",
  "栾川": "luanchuan",
  "滦南": "luannan",
  "滦县": "luanxian",
  "庐江": "lujiang",
  "漯河": "luohe",
  "洛宁": "luoning",
  "洛阳": "ly",
  "罗源": "luoyuan",
  "泸州": "luzhou",
  "吕梁": "lvliang",
  "马鞍山": "mas",
  "茂名": "maoming",
  "眉山": "meishan",
  "梅州": "meizhou",
  "孟津": "mengjin",
  "绵阳": "mianyang",
  "闽清": "minqing",
  "牡丹江": "mudanjiang",
  "南安": "nanan",
  "南昌": "nc",
  "南充": "nanchong",
  "南京": "nanjing",
  "南宁": "nn",
  "南平": "nanping",
  "南通": "nt",
  "南阳": "nanyang",
  "那曲": "naqu",
  "内江": "neijiang",
  "宁波": "nb",
  "宁德": "ningde",
  "宁海": "ninghai",
  "宁乡": "ningxiang",
  "农安": "nongan",
  "怒江": "nujiang",
  "盘锦": "panjin",
  "攀枝花": "panzhihua",
  "沛县": "peixian",
  "蓬莱": "penglai",
  "平顶山": "pingdingshan",
  "平度": "pingdu",
  "平湖": "pinghu",
  "平凉": "pingliang",
  "平山": "hbps",
  "平潭": "pingtan",
  "萍乡": "pingxiang",
  "平阴": "sdpy",
  "邳州": "pizhou",
  "普洱": "puer",
  "普兰店": "pulandian",
  "普宁": "puning",
  "莆田": "putian",
  "濮阳": "puyang",
  "迁安": "qianan",
  "黔东南": "qdn",
  "黔江": "qianjiang",
  "潜江": "qj",
  "黔南": "qiannan",
  "迁西": "qianxi",
  "黔西南": "qianxinan",
  "启东": "qidong",
  "綦江": "qijiang",
  "青岛": "qd",
  "青龙": "hbql",
  "清徐": "qingxu",
  "庆阳": "qingyang",
  "清远": "qingyuan",
  "清镇": "qingzhen",
  "青州": "qingzhou",
  "秦皇岛": "qhd",
  "钦州": "qinzhou",
  "琼海": "qionghai",
  "邛崃": "qionglai",
  "齐齐哈尔": "qiqihaer",
  "七台河": "qitaihe",
  "栖霞": "qixia",
  "泉港": "quangang",
  "泉山": "quanshan",
  "泉州": "qz",
  "曲靖": "qujing",
  "衢州": "quzhou",
  "任丘": "renqiu",
  "日喀则": "rikaze",
  "日照": "rz",
  "荣昌": "rongchang",
  "如东": "rudong",
  "如皋": "rugao",
  "瑞安": "ruian",
  "瑞金": "ruijin",
  "汝阳": "ruyang",
  "汝州": "ruzhou",
  "三河": "hbsh",
  "三门峡": "sanmenxia",
  "三明": "sanming",
  "三沙": "sansha",
  "三亚": "sanya",
  "上海": "sh",
  "商河": "sdsh",
  "商洛": "shangluo",
  "商丘": "shangqiu",
  "上饶": "shangrao",
  "上虞": "shangyu",
  "尚志": "shangzhi",
  "山南": "shannan",
  "汕头": "st",
  "汕尾": "shanwei",
  "韶关": "shaoguan",
  "韶山": "ss",
  "绍兴": "sx",
  "邵阳": "shaoyang",
  "神农架": "shennongjia",
  "沈阳": "sy",
  "深圳": "sz",
  "深州": "hbsz",
  "石河子": "shihezi",
  "石家庄": "sjz",
  "石狮": "shishi",
  "十堰": "shiyan",
  "石柱": "shizhu",
  "石嘴山": "shizuishan",
  "寿光": "sg",
  "双鸭山": "shuangyashan",
  "顺德": "shunde",
  "朔州": "shuozhou",
  "沭阳": "shuyang",
  "四平": "siping",
  "嵩县": "songxian",
  "松原": "songyuan",
  "绥化": "suihua",
  "遂宁": "suining",
  "睢宁": "jssn",
  "随州": "suizhou",
  "宿迁": "sq",
  "宿州": "ahsuzhou",
  "苏州": "suzhou",
  "泰安": "taian",
  "台安": "lnta",
  "太仓": "tc",
  "台山": "taishan",
  "泰兴": "taixing",
  "太原": "taiyuan",
  "台州": "tz",
  "泰州": "taizhou",
  "唐山": "ts",
  "滕州": "tengzhou",
  "天津": "tj",
  "天门": "tianmen",
  "天水": "tianshui",
  "铁岭": "tieling",
  "桐城": "tongcheng",
  "铜川": "tongchuan",
  "通化": "tonghua",
  "铜梁": "tongliang",
  "通辽": "tl",
  "铜陵": "tongling",
  "桐庐": "zjtl",
  "潼南": "tongnan",
  "铜仁": "tongren",
  "铜山": "tongshan",
  "桐乡": "tongxiang",
  "吐鲁番": "tulufan",
  "图木舒克": "tmsk",
  "瓦房店": "wafangdian",
  "望城": "cswc",
  "万宁": "wanning",
  "万州": "wanzhou",
  "潍坊": "wf",
  "威海": "weihai",
  "渭南": "weinan",
  "文安": "wenan",
  "文昌": "wenchang",
  "温岭": "wenling",
  "文山": "wenshan",
  "温州": "wz",
  "乌兰察布": "wlcb",
  "武安": "wuan",
  "五常": "wuchang",
  "舞钢": "wg",
  "乌海": "wuhai",
  "武汉": "wuhan",
  "五河": "wuhe",
  "芜湖": "wuhu",
  "无极": "hbwj",
  "吴江": "wj",
  "五家渠": "wujiaqu",
  "武隆": "wulong",
  "乌鲁木齐": "xj",
  "巫山": "wushan",
  "武威": "wuwei",
  "无锡": "wuxi",
  "五指山": "wuzhishan",
  "吴忠": "wuzhong",
  "梧州": "wuzhou",
  "厦门": "xm",
  "西安": "xian",
  "香港": "hk",
  "象山": "zjxs",
  "湘潭": "xt",
  "湘西": "xiangxi",
  "湘乡": "xiangxiang",
  "襄阳": "xiangyang",
  "咸宁": "xianning",
  "仙桃": "xiantao",
  "咸阳": "xianyang",
  "孝感": "xiaogan",
  "锡林浩特": "xilinhaote",
  "新安": "hnxa",
  "新丰": "xf",
  "兴安盟": "xam",
  "兴化": "xinghua",
  "邢台": "xingtai",
  "荥阳": "xingyang",
  "西宁": "xn",
  "辛集": "xinji",
  "新建": "xinjian",
  "新津": "xinjin",
  "新乐": "xinle",
  "锡林郭勒盟": "xlglm",
  "新密": "xinmi",
  "新民": "xinmin",
  "新泰": "xintai",
  "新乡": "xx",
  "信阳": "xinyang",
  "新沂": "xinyi",
  "新余": "xinyu",
  "新郑": "xinzheng",
  "忻州": "xinzhou",
  "西双版纳": "xishuangbanna",
  "修文": "xiuwen",
  "宣城": "xuancheng",
  "许昌": "xuchang",
  "徐州": "xz",
  "雅安": "yaan",
  "延安": "yanan",
  "延边": "yanbian",
  "盐城": "yancheng",
  "阳春": "yangchun",
  "阳江": "yangjiang",
  "阳曲": "yangqu",
  "阳泉": "yangquan",
  "扬州": "yz",
  "鄢陵": "yanling",
  "偃师": "yanshi",
  "烟台": "yt",
  "宜宾": "yibin",
  "宜昌": "yc",
  "宜城": "hbyc",
  "伊川": "yichuan",
  "伊春": "hljyichun",
  "宜春": "yichun",
  "宜都": "yidu",
  "依兰": "yilan",
  "伊犁": "yili",
  "银川": "yinchuan",
  "营口": "yk",
  "鹰潭": "yingtan",
  "宜兴": "yixing",
  "益阳": "yiyang",
  "宜阳": "hnyy",
  "仪征": "yizheng",
  "宜良": "ynyl",
  "永安": "ya",
  "永城": "yongcheng",
  "永川": "yongchuan",
  "永春": "yongchun",
  "永登": "yongdeng",
  "邕宁": "yongning",
  "永泰": "yongtai",
  "永州": "yongzhou",
  "攸县": "youxian",
  "元氏": "hbys",
  "乐清": "yueqing",
  "岳阳": "yueyang",
  "玉环": "yuhuan",
  "榆林": "sxyulin",
  "玉林": "yl",
  "运城": "yuncheng",
  "云浮": "yunfu",
  "云阳": "yunyang",
  "玉山": "ksys",
  "玉树": "yushu",
  "榆树": "jlys",
  "玉田": "yutian",
  "玉溪": "yuxi",
  "余姚": "yuyao",
  "榆中": "yuzhong",
  "禹州": "hnyz",
  "枣阳": "hbzy",
  "枣庄": "zaozhuang",
  "张北": "zhangbei",
  "张家港": "zjg",
  "张家界": "zhangjiajie",
  "张家口": "zhangjiakou",
  "章丘": "zhangqiu",
  "张掖": "zhangye",
  "漳州": "zhangzhou",
  "湛江": "zj",
  "肇东": "zhaodong",
  "肇庆": "zhaoqing",
  "昭通": "zhaotong",
  "赵县": "hbzx",
  "招远": "zy",
  "肇源": "zhaoyuan",
  "肇州": "zhaozhou",
  "郑州": "zz",
  "镇海": "zhenhai",
  "镇江": "zhenjiang",
  "枝江": "zhijiang",
  "中牟": "zhongmou",
  "中山": "zs",
  "中卫": "zhongwei",
  "忠县": "zhongxian",
  "钟祥": "zhongxiang",
  "周口": "zhoukou",
  "舟山": "zhoushan",
  "周至": "zhouzhi",
  "庄河": "lnzh",
  "诸城": "zhucheng",
  "珠海": "zh",
  "诸暨": "zhuji",
  "驻马店": "zhumadian",
  "株洲": "zhuzhou",
  "淄博": "zb",
  "自贡": "zigong",
  "资阳": "ziyang",
  "邹城": "zoucheng",
  "邹平": "zouping",
  "遵化": "zunhua",
  "遵义": "zunyi"
}



if __name__ == '__main__':
    # {'https://nanyang.anjuke.com/community/wolongb/': '卧龙',
    # 'https://nanyang.anjuke.com/community/wanchengb/': '宛城',
    # ......,
    # 'https://nanyang.anjuke.com/community/nanzhaob/': '南召',
    # 'https://nanyang.anjuke.com/community/qitaabcdefghijklmnopqrs/': '其他'}

    #
    # make_url('深圳', 'https://{}.esf.fang.com/{}/')

    # get_regions('深圳')
    # data1 = open('test.html', 'r', encoding='utf-8').read()
    # import re
    # from selenium import webdriver
    # import time
    # url_city = dict(re.findall('<a href="([^"]+)">([^<]+)</a>', data1))
    # driver = webdriver.Chrome()
    # city_map = {}
    # for url in url_city:
    #     print(url)
    #     driver.get(url)
    #     if 'verify' in driver.current_url:
    #         input()
    #     # time.sleep(.1)
    #     elm = driver.find_element_by_xpath("//div[@id='header']//span[@class='city']")
    #     city_name = elm.text
    #     city_code = re.findall('https://([^\.]+)\.',driver.current_url)[0]
    #     city_map[city_name] = city_code
    #     print(city_name, city_code)
    # with open('city_code2.json', 'w', encoding='utf-8') as f:
    #     json.dump(city_map, f)
    # driver.close()

    # for city, city_code in city_map.items():
    #     if city != '深圳': continue
    #     # make_url(city_name=city, url_fmt='https://{}.esf.fang.com/housing/{}/', GetType="小区")
    #     make_url(city_name=city, url_fmt='https://{}.esf.fang.com/housing/{}/', GetType="小区")
    #     print()
    # print(city_map)
    # print(city_list)
    pass